{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Documents\\\\APIHumberto2021\\\\Segundo Bimestre\\\\CoronaVac\\\\src\\\\Pages\\\\Cadastro\\\\Cadastro.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/core';\nimport styles from \"../../Styles/mainStyle\";\nimport { CircleButton } from \"../../Components/Buttons/CircleButton/CircleButton\";\nimport { BackgroundImageURl } from \"../../../assets/constants\";\nimport Loading from \"../../Components/Loading/Loading\";\nimport api from \"../../Services/api\";\nexport default function Cadastro() {\n  var navigation = useNavigation();\n  var image = {\n    uri: BackgroundImageURl\n  };\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      txtNome = _React$useState2[0],\n      setNome = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      txtEmail = _React$useState4[0],\n      setEmail = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      txtSenha = _React$useState6[0],\n      setSenha = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      txtConfirmarSenha = _React$useState8[0],\n      setConfirmarSenha = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      flLoading = _React$useState10[0],\n      setLoading = _React$useState10[1];\n\n  if (flLoading) {\n    return React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    });\n  }\n\n  function navigateToLogin() {\n    return _regeneratorRuntime.async(function navigateToLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(txtNome.trim() === '')) {\n              _context.next = 3;\n              break;\n            }\n\n            alert('Campo Nome é obrigatório');\n            return _context.abrupt(\"return\");\n\n          case 3:\n            if (!(txtEmail.trim() === '')) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Campo E-mail é obrigatório');\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(txtSenha.trim() === '')) {\n              _context.next = 9;\n              break;\n            }\n\n            alert('Campo senha é obrigatório');\n            return _context.abrupt(\"return\");\n\n          case 9:\n            if (!(txtConfirmarSenha.trim() === '')) {\n              _context.next = 12;\n              break;\n            }\n\n            alert('Campo confirmar senha é obrigatório');\n            return _context.abrupt(\"return\");\n\n          case 12:\n            if (!(txtConfirmarSenha != txtSenha)) {\n              _context.next = 15;\n              break;\n            }\n\n            alert('Senhas não coincidem');\n            return _context.abrupt(\"return\");\n\n          case 15:\n            realizaCadastro();\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function realizaCadastro() {\n    var errors, objCadastro;\n    return _regeneratorRuntime.async(function realizaCadastro$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            errors = [];\n            setLoading(true);\n            objCadastro = {\n              nome: txtNome,\n              email: txtEmail,\n              senha: txtSenha\n            };\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(api.post(\"/paciente/Cadastro\", objCadastro).then(function (response) {\n              if (response.data.auth) {\n                setLoading(false);\n                Alert.alert('Aviso', 'Cadastro realizado!\\nInicie a sessao na tela de Login');\n                navigation.navigate('Login');\n              }\n            }).catch(function (e) {\n              setLoading(false);\n              e.response.data.errors.map(function (item) {\n                errors.push(\"\\n\\n\" + item);\n              });\n              Alert.alert('Aviso', \"\" + erros);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function navigateToWelcome() {\n    navigation.navigate('Welcome');\n  }\n\n  return React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Bem vindo!\"), React.createElement(TextInput, {\n    placeholder: \"Nome completo\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setNome(text);\n    },\n    value: txtNome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"E-mail\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    },\n    value: txtEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Senha\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setSenha(text);\n    },\n    value: txtSenha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Confirmar Senha\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setConfirmarSenha(text);\n    },\n    value: txtConfirmarSenha,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.buttonClickMe,\n    activeOpacity: 0.7,\n    onPress: navigateToLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }, \"Cadastrar\")), React.createElement(View, {\n    style: {\n      paddingTop: '25%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, React.createElement(CircleButton, {\n    title: '<',\n    onPress: navigateToWelcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }))))))));\n}","map":{"version":3,"sources":["C:/Users/gabri/Documents/APIHumberto2021/Segundo Bimestre/CoronaVac/src/Pages/Cadastro/Cadastro.tsx"],"names":["React","useNavigation","styles","CircleButton","BackgroundImageURl","Loading","api","Cadastro","navigation","image","uri","useState","txtNome","setNome","txtEmail","setEmail","txtSenha","setSenha","txtConfirmarSenha","setConfirmarSenha","flLoading","setLoading","navigateToLogin","trim","alert","realizaCadastro","errors","objCadastro","nome","email","senha","post","then","response","data","auth","Alert","navigate","catch","e","map","item","push","erros","navigateToWelcome","container","form","title","textInput","text","buttonClickMe","textButton","paddingTop"],"mappings":"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","sourcesContent":["//react imports\r\nimport React from 'react';\r\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View, SafeAreaView, KeyboardAvoidingView, Platform, ImageBackground, Alert } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\n//my imports\r\nimport styles from '../../Styles/mainStyle'\r\nimport { CircleButton } from '../../Components/Buttons/CircleButton/CircleButton'\r\nimport { BackgroundImageURl } from '../../../assets/constants'\r\nimport Loading from '../../Components/Loading/Loading'\r\n\r\nimport api from '../../Services/api'\r\nimport { AxiosResponse } from 'axios';\r\n\r\n\r\ninterface CadastroProps {\r\n    nome: string,\r\n    email: string,\r\n    senha: string\r\n}\r\n\r\nexport default function Cadastro() {\r\n\r\n    const navigation = useNavigation();\r\n    const image = { uri: BackgroundImageURl }\r\n    const [txtNome, setNome] = React.useState('');\r\n    const [txtEmail, setEmail] = React.useState('');\r\n    const [txtSenha, setSenha] = React.useState('');\r\n    const [txtConfirmarSenha, setConfirmarSenha] = React.useState('');\r\n\r\n    const [flLoading, setLoading] = React.useState(false);\r\n\r\n\r\n    if (flLoading) {\r\n        return (<Loading />)\r\n    }\r\n\r\n    async function navigateToLogin() {\r\n\r\n        if (txtNome.trim() === '') {\r\n            alert('Campo Nome é obrigatório');\r\n            return;\r\n        }\r\n        if (txtEmail.trim() === '') {\r\n            alert('Campo E-mail é obrigatório');\r\n            return;\r\n        }\r\n        if (txtSenha.trim() === '') {\r\n            alert('Campo senha é obrigatório');\r\n            return;\r\n        }\r\n        if (txtConfirmarSenha.trim() === '') {\r\n            alert('Campo confirmar senha é obrigatório');\r\n            return;\r\n        }\r\n        if (txtConfirmarSenha != txtSenha) {\r\n            alert('Senhas não coincidem');\r\n            return;\r\n        }\r\n        realizaCadastro();\r\n    }\r\n\r\n    async function realizaCadastro() {\r\n        let errors = []\r\n        setLoading(true);\r\n        const objCadastro: CadastroProps = {\r\n            nome: txtNome,\r\n            email: txtEmail,\r\n            senha: txtSenha\r\n        }\r\n        await api.post(`/paciente/Cadastro`, objCadastro)\r\n            .then(response => {\r\n                if (response.data.auth) {\r\n                    setLoading(false);\r\n                    Alert.alert('Aviso', 'Cadastro realizado!\\nInicie a sessao na tela de Login')\r\n                    navigation.navigate('Login');\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                setLoading(false);\r\n                e.response.data.errors.map((item: string) => {\r\n                    errors.push(`\\n\\n${item}`)\r\n                })\r\n                Alert.alert('Aviso', `${erros}`)\r\n            })\r\n    }\r\n\r\n\r\n    function navigateToWelcome() {\r\n        navigation.navigate('Welcome');\r\n    }\r\n\r\n    return (\r\n        <ImageBackground source={image} style={styles.image}>\r\n            <SafeAreaView style={styles.container}>\r\n                <KeyboardAvoidingView style={styles.container}>\r\n                    <View>\r\n                        <View style={styles.container}>\r\n                            <View style={styles.form}>\r\n                                <Text style={styles.title}>Bem vindo!</Text>\r\n                                <TextInput\r\n                                    placeholder=\"Nome completo\"\r\n                                    style={styles.textInput}\r\n                                    onChangeText={(text) => { setNome(text); }}\r\n                                    value={txtNome}\r\n                                ></TextInput>\r\n                                <TextInput\r\n                                    placeholder=\"E-mail\"\r\n                                    style={styles.textInput}\r\n                                    onChangeText={(text) => { setEmail(text); }}\r\n                                    value={txtEmail}\r\n                                ></TextInput>\r\n                                <TextInput\r\n                                    placeholder=\"Senha\"\r\n                                    style={styles.textInput}\r\n                                    onChangeText={(text) => { setSenha(text); }}\r\n                                    value={txtSenha}\r\n                                ></TextInput>\r\n                                <TextInput\r\n                                    placeholder=\"Confirmar Senha\"\r\n                                    style={styles.textInput}\r\n                                    onChangeText={(text) => { setConfirmarSenha(text); }}\r\n                                    value={txtConfirmarSenha}\r\n                                ></TextInput>\r\n                                <TouchableOpacity\r\n                                    style={styles.buttonClickMe}\r\n                                    activeOpacity={0.7}\r\n                                    onPress={navigateToLogin}\r\n                                >\r\n                                    <Text style={styles.textButton}>Cadastrar</Text>\r\n                                </TouchableOpacity>\r\n                                <View style={{ paddingTop: '25%' }}>\r\n                                    <CircleButton\r\n                                        title={'<'}\r\n                                        onPress={navigateToWelcome}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </KeyboardAvoidingView>\r\n            </SafeAreaView>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}